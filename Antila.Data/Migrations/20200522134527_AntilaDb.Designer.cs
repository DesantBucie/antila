// <auto-generated />
using Antila.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Antila.Data.Migrations
{
    [DbContext(typeof(AntilaDbContext))]
    [Migration("20200522134527_AntilaDb")]
    partial class AntilaDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Antila.Core.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Boeing 737",
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 2,
                            Content = "Airbus 380",
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 3,
                            Content = "Tu-154",
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 4,
                            Content = "DC-9",
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 5,
                            Content = "Rick",
                            QuestionId = 2
                        },
                        new
                        {
                            Id = 6,
                            Content = "Deckard",
                            QuestionId = 2
                        },
                        new
                        {
                            Id = 7,
                            Content = "Jest",
                            QuestionId = 2
                        },
                        new
                        {
                            Id = 8,
                            Content = "Replikantem",
                            QuestionId = 2
                        },
                        new
                        {
                            Id = 9,
                            Content = "Zwykłą grypą",
                            QuestionId = 3
                        },
                        new
                        {
                            Id = 10,
                            Content = "Groźną chorobą",
                            QuestionId = 3
                        },
                        new
                        {
                            Id = 11,
                            Content = "Efektem ubocznym chemitrails",
                            QuestionId = 3
                        },
                        new
                        {
                            Id = 12,
                            Content = "Atakiem USA na gospodarkę Chin",
                            QuestionId = 3
                        },
                        new
                        {
                            Id = 13,
                            Content = "Śmierć",
                            QuestionId = 4
                        },
                        new
                        {
                            Id = 14,
                            Content = "Wysypka na twarzy",
                            QuestionId = 4
                        },
                        new
                        {
                            Id = 15,
                            Content = "COVID-19",
                            QuestionId = 4
                        },
                        new
                        {
                            Id = 16,
                            Content = "Nie ma takich",
                            QuestionId = 4
                        },
                        new
                        {
                            Id = 17,
                            Content = "Norwid",
                            QuestionId = 5
                        },
                        new
                        {
                            Id = 18,
                            Content = "Sienkiewicz",
                            QuestionId = 5
                        },
                        new
                        {
                            Id = 19,
                            Content = "Traugutt",
                            QuestionId = 5
                        },
                        new
                        {
                            Id = 20,
                            Content = "TZN",
                            QuestionId = 5
                        });
                });

            modelBuilder.Entity("Antila.Core.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorrectId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TestId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TestId")
                        .IsUnique();

                    b.ToTable("Question");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Wskaż samolot najczęściej używany do zrzutu chemitrails",
                            CorrectId = "1",
                            TestId = 1
                        },
                        new
                        {
                            Id = 2,
                            Content = "Jak nazywa się postać w którą wciela się Harrison Ford w 'Łowcy Androidów'?",
                            CorrectId = "7",
                            TestId = 2
                        },
                        new
                        {
                            Id = 3,
                            Content = "Czym rzeczywiście jest choroba wywoływana przez COVID-19?",
                            CorrectId = "10",
                            TestId = 3
                        },
                        new
                        {
                            Id = 4,
                            Content = "Jakie są efekty uboczne 5G?",
                            CorrectId = "15",
                            TestId = 4
                        },
                        new
                        {
                            Id = 5,
                            Content = "Jakie są efekty uboczne 5G?",
                            CorrectId = "18",
                            TestId = 5
                        });
                });

            modelBuilder.Entity("Antila.Core.Test", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Fakty Autentyczne"
                        },
                        new
                        {
                            Id = 2,
                            Category = "Kinematografia"
                        },
                        new
                        {
                            Id = 3,
                            Category = "Społeczeństwo"
                        },
                        new
                        {
                            Id = 4,
                            Category = "Społeczeństwo"
                        },
                        new
                        {
                            Id = 5,
                            Category = "Społeczeństwo"
                        });
                });

            modelBuilder.Entity("Antila.Core.Answer", b =>
                {
                    b.HasOne("Antila.Core.Question", null)
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Antila.Core.Question", b =>
                {
                    b.HasOne("Antila.Core.Test", null)
                        .WithOne("Question")
                        .HasForeignKey("Antila.Core.Question", "TestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
