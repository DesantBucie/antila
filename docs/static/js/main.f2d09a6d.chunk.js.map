{"version":3,"sources":["store/Category.ts","store/index.ts","components/NavMenu.tsx","components/Layout.tsx","components/Home.tsx","components/Help.tsx","components/Quiz.tsx","components/Summary.tsx","components/ChoseIt.tsx","App.tsx","registerServiceWorker.ts","index.tsx","store/configureStore.ts"],"names":["actionCreators","getcategory","category","dispatch","type","reducers","state","incomingAction","undefined","action","NavMenu","React","isOpen","styles","toggler","border","toggle","this","setState","render","from","marginTop","to","config","duration","props","Navbar","style","className","light","Container","NavbarBrand","tag","Link","NavbarToggler","onClick","Collapse","navbar","NavItem","NavLink","icon","faHome","faQuestion","faInfoCircle","children","header","textAlign","background","padding","button","borderRadius","paddingTop","paddingBottom","back","connect","Row","Quiz","loading","error","numer","question","answers","id","response","redirect","allquestions","currentquestion","content","answer1","answer2","answer3","answer4","id1","id2","id3","id4","it","loadData","a","apiLink","axios","get","then","res","data","catch","err","console","currentQuestion","all","toString","selectAnswer","e","parseInt","target","sendId","post","molonLabe","amount","length","componentDidMount","marginBottom","buttons","width","top","opacity","Col","sm","xs","Category","Summary","test","chart","good","bad","loadSum","name","value","screenwidth","window","outerWidth","COLORS","section","height","cx","cy","labelLine","outerRadius","fill","startAngle","endAngle","dataKey","map","entry","index","key","ChoseIt","ChooseCategory","handleChange","event","form","form__select","display","color","boxSizing","margin","boxShadow","form__button","onSubmit","onChange","Layout","exact","path","component","Home","Help","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","baseUrl","document","getElementsByTagName","getAttribute","history","createBrowserHistory","basename","store","initialState","middleware","thunk","routerMiddleware","rootReducer","combineReducers","router","connectRouter","enhancers","windowIfDefined","__REDUX_DEVTOOLS_EXTENSION__","push","createStore","compose","applyMiddleware","configureStore","ReactDOM","App","getElementById","URL","process","origin","addEventListener","fetch","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.f2d09a6d.chunk.js","sourcesContent":["import { Action, Reducer } from 'redux';\r\nimport { AppThunkAction } from '.';\r\n\r\nexport interface CategoryState {\r\n    category:string,\r\n};\r\n\r\nexport interface GetCategoryAction {type: 'GET_CATEGORY',category:string}; \r\nexport interface RecieveCategoryAction {type:'RECIEVE_CATEGORY'};\r\n\r\ntype KnownAction = GetCategoryAction|RecieveCategoryAction; \r\n\r\nexport const actionCreators = {\r\n    getcategory : (category:string):AppThunkAction<KnownAction> => (dispatch) => {\r\n        dispatch({type:\"GET_CATEGORY\", category:category});\r\n    },\r\n};\r\nexport const reducer: Reducer<CategoryState> = (state: CategoryState | undefined, incomingAction: Action): CategoryState => {\r\n    if (state === undefined) {\r\n        return { category: 'społeczeństwo' };\r\n    }\r\n    const action = incomingAction as KnownAction;\r\n    switch (action.type) {\r\n        case 'GET_CATEGORY':\r\n            return { category:action.category };\r\n        case 'RECIEVE_CATEGORY':           \r\n            return {category:state.category};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import * as Category from './Category';\r\n//top level interface \r\nexport interface ApplicationState {\r\n    category: Category.CategoryState | undefined;\r\n   // quizstorage: QuizStorage.QuizStorageState | undefined;\r\n}\r\n\r\n// Whenever an action is dispatched, Redux will update each top-level application state property using\r\n// the reducer with the matching name. It's important that the names match exactly, and that the reducer\r\n// acts on the corresponding ApplicationState property type.\r\nexport const reducers = {\r\n    category: Category.reducer,\r\n};\r\n\r\n// This type can be used as a hint on action creators so that its 'dispatch' and 'getState' params are\r\n// correctly typed to match your store.\r\nexport interface AppThunkAction<TAction> {\r\n    (dispatch: (action: TAction) => void, getState: () => ApplicationState): void;\r\n}\r\n","import * as React from 'react';\r\nimport { Collapse, Container, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Spring } from 'react-spring/renderprops';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHome,faQuestion,faInfoCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport './NavMenu.scss';\r\n\r\nexport default class NavMenu extends React.PureComponent<{}, { isOpen: boolean }> {\r\n    public state = {\r\n        isOpen: false\r\n    };\r\n    readonly styles = {\r\n        toggler: {\r\n            border:'1px transparent solid'\r\n        }\r\n    }\r\n    public render() {\r\n        return (\r\n            <header>\r\n                <Spring\r\n                from={{ marginTop:-200 }}\r\n                to={{ marginTop: 0}}\r\n                config={{duration:500,}}>\r\n                {props => (\r\n                    <Navbar style={props} className=\"navbar-expand-sm navbar-toggleable-sm border-bottom box-shadow mb-3\" light>\r\n                        <Container>\r\n                            <NavbarBrand tag={Link} to=\"/\">QZWRDL.</NavbarBrand>\r\n                            <NavbarToggler style={this.styles.toggler} onClick={this.toggle} className=\"mr-2\"/>\r\n                            <Collapse className=\"d-sm-inline-flex flex-sm-row-reverse\" isOpen={this.state.isOpen} navbar>\r\n                                <ul className=\"navbar-nav flex-grow\">\r\n                                    <NavItem>\r\n                                        <NavLink tag={Link} className=\"text-dark\" to=\"/\">Strona Główna <FontAwesomeIcon icon={faHome}/></NavLink>\r\n                                    </NavItem>\r\n                                    <NavItem>\r\n                                        <NavLink tag={Link} className=\"text-dark\" to=\"/category\">Quiz <FontAwesomeIcon icon={faQuestion}/></NavLink>\r\n                                    </NavItem>\r\n                                    <NavItem>\r\n                                        <NavLink tag={Link} className=\"text-dark\" to=\"/help\">Pomoc <FontAwesomeIcon icon={faInfoCircle}/></NavLink>\r\n                                    </NavItem>\r\n                                </ul>\r\n                            </Collapse>\r\n                        </Container>\r\n                    </Navbar>)}\r\n                </Spring>\r\n            </header>\r\n        );\r\n    }\r\n\r\n    private toggle = () => {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        });\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport NavMenu from './NavMenu';\r\n\r\nexport default (props: { children?: React.ReactNode }) => (\r\n    <React.Fragment>\r\n        <NavMenu/>\r\n        <Container>\r\n            {props.children}\r\n        </Container>\r\n    </React.Fragment>\r\n);\r\n","import * as React from 'react';\r\nimport { Button, Container,Row,Col } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nconst Home = () => (\r\n    <section style={styles.back}>\r\n        <Container>\r\n                <div style={styles.header}>\r\n                    <h1>Witaj na QuizWorld</h1>\r\n                    <Link to='/category'><button style={styles.button}>Zaczynajmy!</button></Link>\r\n                </div>\r\n        </Container>\r\n    </section>\r\n\r\n);\r\nconst styles = {\r\n    header: {\r\n        textAlign:'center' as 'center',\r\n        background:'#dadedf',\r\n        padding:'40px'\r\n    },\r\n    button: {\r\n        borderRadius:'4px',\r\n        background:'lightblue',\r\n        border:'1px solid transparent',\r\n        padding:'20px',\r\n        paddingTop:'15px',\r\n        paddingBottom:'15px',\r\n        marginTop:'10px'\r\n    },\r\n    back: {\r\n    }\r\n}\r\nexport default connect()(Home);\r\n","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Container, Row } from 'reactstrap';\r\n\r\nconst Help = () => (\r\n    <section>\r\n        <Container>\r\n            <Row>\r\n        <h1>Potrzebujesz pomocy?</h1>\r\n        <p><b>Strona dopiero się rozwija(lub już nie)</b>ale automat powinien wylosować ci pytanie i cztery odpowiedzi, jeśli natrafisz na błąd, zgłoś go w formularzu.</p>\r\n       {/*} <form>\r\n            <h2>Opisz Bug</h2>\r\n            <textarea>\r\n            </textarea>\r\n            <input type='mail'>przyklad@mail.com</input>\r\n</form>{*/}\r\n        </Row>\r\n        </Container>\r\n    </section>\r\n);\r\n\r\nexport default connect()(Help);\r\n","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Container,Row,Col } from 'reactstrap';\r\nimport { Spring } from 'react-spring/renderprops';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { ApplicationState } from '../store';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport * as Category from '../store/Category';\r\n\r\nimport './Quiz.scss';\r\n/*\r\nThis code differs a little bit from the rest of the project, as it current state of 03.05.20.\r\nThere is a main class with variables stored inside state, no redux is used yet. \r\n\r\nstate - most of the variables used to fetch and send data\r\nloadData() - function which loads question and answers\r\nsendIt() -function which sends selected answer\r\nrender() - well render\r\n\r\n REMEMBER ABOUT SETTING STATE WHEN PASSING VARIABLES\r\n\r\n and typescript may need :any\r\n*/\r\ntype CategoryProps =\r\n    Category.CategoryState &\r\n    typeof Category.actionCreators &\r\n\tRouteComponentProps<{}>;\r\n\t\r\ntype State = {\r\n\tloading: boolean,\r\n\terror: boolean,\r\n\tnumer:number,\r\n\tquestion: {\r\n\t\tanswers:[\r\n\t\t\t{\r\n\t\t\t\tid:any\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\tresponse:string,\r\n\tredirect:boolean,\r\n\tallquestions?:any,\r\n\tcurrentquestion?:any;\r\n\tit:number,\r\n};\r\n\r\n\r\n\r\n\r\nexport class Quiz extends React.Component<CategoryProps> {\r\n\t\r\n   \treadonly  state : State = {\r\n        loading: true,\r\n\t\terror: false,\r\n\t\tnumer:0,\r\n\t\tquestion: {\r\n\t\t\tanswers:[\r\n\t\t\t\t{\r\n\t\t\t\t\tid:0,\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\tresponse:'',\r\n\t\tredirect:false,\r\n\t\tallquestions:[],\r\n\t\tcurrentquestion:{\r\n\t\t\tcategory:'',\r\n\t\t\tid:0,\r\n\t\t\tcontent:'',\r\n\t\t\tanswer1:'',\r\n\t\t\tanswer2:'',\r\n\t\t\tanswer3:'',\r\n\t\t\tanswer4:'',\r\n\t\t\tid1:'',\r\n\t\t\tid2:'',\r\n\t\t\tid3:'',\r\n\t\t\tid4:'',\r\n\t\t},\r\n\t\tit:0\r\n\t};\r\n\r\n    loadData = async() => {\r\n\t\tthis.setState({ loading: true });\r\n\t\tconst category = this.props.category;\r\n\t\tconst apiLink = 'https://localhost:44322/api/Test/' + category; \r\n        await axios.get(apiLink)\r\n        .then(res=> {\r\n            this.setState({\r\n\t\t\t\tallquestions: res.data,\r\n                loading: false,\r\n\t\t\t\terror: false,\r\n\t\t\t});\r\n\t\t})\r\n        .catch(err => {\r\n        \tconsole.error(\"error: \", err);\r\n            this.setState({\r\n              \terror: `${err}`,\r\n              \tloading: false\r\n            });\r\n\t\t}) \r\n\t\tthis.currentQuestion();\r\n\t}\r\n\tcurrentQuestion = async() => {\r\n\t\tconst it = this.state.it;\r\n\t\tconst all = this.state.allquestions[it];\r\n\t\tawait this.setState({\r\n\t\t\tcurrentquestion: {\r\n\t\t\t\tcategory: all.category,\r\n\t\t\t\tid: all.id,\r\n\t\t\t\tcontent: all.question.content,\r\n\t\t\t\tanswer1: all.question.answers[0].content,\r\n\t\t\t\tanswer2: all.question.answers[1].content,\r\n\t\t\t\tanswer3: all.question.answers[2].content,\r\n\t\t\t\tanswer4: all.question.answers[3].content,\r\n\t\t\t\tid1: all.question.answers[0].id.toString(),\r\n\t\t\t\tid2: all.question.answers[1].id.toString(),\r\n\t\t\t\tid3: all.question.answers[2].id.toString(),\r\n\t\t\t\tid4: all.question.answers[3].id.toString(),\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\tselectAnswer = async (e:any) => {\r\n\t\tawait this.setState({\r\n\t\t\tnumer:parseInt(e.target.id)\r\n\t\t})\r\n\t\tawait this.setState ({\r\n\t\t\tquestion:{\r\n\t\t\t\tanswers:[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tid:this.state.numer,\r\n\t\t\t\t\t}\r\n\t\t\t\t] \r\n\t\t\t}\t \r\n\t\t});\r\n\t\tthis.sendId();\r\n\t}\r\n\tsendId = async () => {\r\n\t\tconst {question} = this.state;\r\n\t\tconst id = this.state.currentquestion.id;\r\n\t\tawait axios.post(`https://localhost:44322/api/Test`, {id,question})\r\n\t\t.then( res => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\tresponse:res.data\r\n\t\t\t});\r\n\t\t})\r\n\t\t.catch(err =>{\r\n\t\t\tconsole.error(\"error: \", err);\r\n\t\t\tthis.setState({\r\n\t\t\t\terror: `${err}`,\r\n\t\t\t});\r\n\t\t})\r\n\t\tthis.molonLabe();\r\n\t};\r\n\tmolonLabe = async () => {\r\n\t\tconst it = this.state.it;\r\n\t\tconst amount = this.state.allquestions.length;\r\n\t\tif (it < amount - 1) {\r\n\t\t\tawait this.setState({\r\n\t\t\t\tit : this.state.it + 1\r\n\t\t\t})\r\n\t\t\tthis.currentQuestion();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tawait this.setState({\r\n\t\t\t\t\tredirect:true\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tthis.loadData();\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tconst {category, answer1, content, answer2, answer3, answer4,id1,id2,id3,id4,id} = this.state.currentquestion;\r\n\t\tconst {redirect,loading, error} = this.state;\r\n\t\tconst styles = {\r\n\t\t\tanswers:{\r\n\t\t\t\tmarginBottom:\"10px\",\r\n\t\t\t},\r\n\t\t\tbuttons: {\r\n\t\t\t\twidth:\"100%\",\r\n\t\t\t\tpadding:'30px',\r\n\t\t\t\tborder:'1px solid transparent',\r\n\t\t\t\tborderRadius:'4px'\r\n\t\t\t},\r\n\t\t\ttop: {\r\n\t\t\t\tmarginTop:'30px'\r\n\t\t\t},\r\n\t\t\tquestion: {\r\n\t\t\t\tmarginBottom:'30px'\r\n\t\t\t},\r\n\t\t\tid: {\r\n\t\t\t\ttextAlign:'right' as 'right',\r\n\t\t\t},\t\r\n\t\t};    \r\n\t\tif (loading) {\r\n\t\t\treturn (\r\n\t\t\t<h2>Ładowanie...</h2>\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (error) {\r\n\t\t\treturn (\r\n\t\t\t\t<p>\r\n\t\t\t\tWystąpił problem podczas ładowania{\" \"}\r\n\t\t\t\t<button style={styles.buttons} onClick={this.loadData}>Spróbuj ponownie!</button>\r\n\t\t\t\t</p>\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (redirect){\r\n\t\t\treturn (\r\n\t\t\t\t<Redirect to=\"/summary\"/>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn (\r\n\t\t<section>\r\n\t\t\t<Spring\r\n\t\t\tfrom={{ opacity: 0 }}\r\n\t\t\tto={{ opacity: 1 }}\r\n\t\t\tconfig={{duration:700}}>\r\n\t\t\t{props => \r\n\t\t<Container style={props}>\r\n\t\t\t<Row style={styles.top}>\r\n\t\t\t\t<Col sm={6}>\r\n\t\t\t\t\t<p>Kategoria: {category}</p>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col sm={6}>\r\n\t\t\t\t\t<p style={styles.id}>ID z bazy danych: {id}</p>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col sm={12}>\r\n\t\t\t\t\t<h2 style={styles.question}>{content}</h2>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col xs={6}>\r\n\t\t\t\t\t<div style={styles.answers}>\r\n\t\t\t\t\t\t<button id={id1} className={'but1'} onClick={this.selectAnswer} style={styles.buttons} >A. {answer1}</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col xs={6}>\r\n\t\t\t\t\t<div style={styles.answers}>\r\n\t\t\t\t\t\t<button id={id2} className={'but2'} onClick={this.selectAnswer} style={styles.buttons} >B. {answer2}</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col xs={6}>\r\n\t\t\t\t\t<div style={styles.answers}>\r\n\t\t\t\t\t\t<button id={id3} className={'but3'} onClick={this.selectAnswer} style={styles.buttons} >C. {answer3}</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col xs={6}>\r\n\t\t\t\t\t<div style={styles.answers}>\r\n\t\t\t\t\t\t<button  id={id4} className={'but4'} onClick={this.selectAnswer} style={styles.buttons}>D. {answer4}</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n  </Container>} \r\n\t\t</Spring>\r\n\t\t</section>\r\n\t\t);\r\n\t};\r\n}\r\n\r\nexport default connect(\r\n\t(state: ApplicationState) => state.category,\r\n    Category.actionCreators\r\n) (Quiz as any);\r\n","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { PieChart, Pie,Cell} from 'recharts';\r\nimport { Container,Row,Col } from 'reactstrap';\r\n\r\ntype State = {\r\n    test?:any,\r\n    chart:any,\r\n    good:number,\r\n    bad:number\r\n}\r\nclass Summary extends React.Component<State> {\r\n    readonly state : State = {\r\n        test:'',\r\n        chart:'',\r\n        good:0,\r\n        bad:0,\r\n    }\r\n    loadSum = async () => {\r\n        await axios.get(`https://localhost:44322/api/Test/summary`,{\r\n        })\r\n        .then (res => {\r\n            this.setState({\r\n                good:res.data[0],\r\n                bad:res.data[1],\r\n            })           \r\n        })\r\n    };\r\n    componentDidMount(){\r\n        this.loadSum();\r\n    }\r\n    render()  {\r\n        const {good, bad} = this.state;\r\n        const data = [\r\n            { name: 'Poprawne odpowiedzi', value: good }, { name: 'Złe odpowiedzi', value: bad },\r\n          ];\r\n        const screenwidth = window.outerWidth;\r\n        const COLORS = ['#00FF00', '#FF0000'];\r\n        const styles = {\r\n            button: {\r\n                width:'50%',\r\n                padding:'1.5em',\r\n\t\t\t\tborder:'1px solid transparent',\r\n                borderRadius:'4px',\r\n                marginTop:'.3em',\r\n            },\r\n            section:{\r\n                textAlign: 'center' as 'center',\r\n            }\r\n        }\r\n        return (\r\n            <section style={styles.section}>\r\n                <Container>\r\n                    <Row>\r\n                {this.state.test}\r\n                <Col xs={12}><PieChart width={screenwidth} height={300}>\r\n                    <Pie\r\n                    data={data}\r\n                    cx={(screenwidth/2) - 150}\r\n                    cy={150}\r\n                    labelLine={false}\r\n                    outerRadius={80}\r\n                    fill=\"#8884d8\"\r\n                    startAngle={180} \r\n                    endAngle={0}\r\n                    dataKey=\"value\"\r\n                    >\r\n                    {\r\n                        data.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\r\n                    }\r\n                    </Pie>\r\n                </PieChart></Col>\r\n                <Col xs={12}>\r\n                    Dobrych odpowiedzi: {good} <br/>\r\n                    Złych odpowiedzi: {bad}\r\n                </Col>\r\n                <Col xs={12} sm={6}><Link to='/quiz'><button style={styles.button}>Spróbuj jeszcze raz!</button></Link></Col>\r\n                <Col xs={12} sm={6}><Link to='/'><button style={styles.button}>Wracam do strony głównej</button></Link></Col>\r\n                </Row>\r\n                </Container>             \r\n            </section>\r\n        )\r\n\r\n    }\r\n}\r\nexport default connect() (Summary);","import * as React from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { ApplicationState } from '../store';\r\nimport * as Category from '../store/Category';\r\n\r\ntype State = {\r\n    category:string,\r\n    redirect:boolean,\r\n}\r\ntype CategoryProps =\r\n    Category.CategoryState &\r\n    typeof Category.actionCreators &\r\n    RouteComponentProps<{}>;\r\n\r\nclass ChoseIt extends React.Component<CategoryProps> {\r\n    readonly state : State = {\r\n        category:'społeczeństwo',\r\n        redirect:false,\r\n    }\r\n    ChooseCategory = async() => {\r\n        const category = this.state.category;\r\n        this.props.getcategory(category);\r\n        await this.setState({redirect:true})\r\n    }\r\n    handleChange = async(event:any) => {\r\n        await this.setState({category: event.target.value});\r\n    }\r\n    \r\n    render()  {\r\n        const redirect = this.state.redirect;\r\n        if(redirect){\r\n            return (<Redirect to='/quiz'/>)\r\n        }\r\n        const styles= {\r\n            form: {\r\n                width:'100%',\r\n                textAlign: 'center' as 'center',\r\n            },\r\n            form__select:{\r\n                display:'block',\r\n                width:'100%',\r\n                padding: '.6em 1.4em',\r\n                color: '#444',\r\n                boxSizing: 'border-box' as 'border-box',\r\n                margin: 0,\r\n                border: '1px solid #aaa',\r\n                boxShadow: '0 1px 0 1px rgba(0,0,0,.04)',\r\n                borderRadius: '.5em',\r\n                marginBottom: '1em',\r\n            },\r\n            form__button: {\r\n                width:'70%',\r\n                padding:'1.5em',\r\n\t\t\t\tborder:'1px solid transparent',\r\n\t\t\t\tborderRadius:'4px',\r\n            }\r\n        }\r\n        return (\r\n            <section>\r\n                <Container>\r\n                    <Row>\r\n\r\n                    <Col xs={12}>Wybierz kategorię:</Col>\r\n                    <form onSubmit={this.ChooseCategory} style={styles.form}>\r\n                        <Col xs={12}><select value={this.state.category} onChange={this.handleChange} style={styles.form__select}>\r\n                            <option value=''>Wszystkie</option>\r\n                            <option value=\"społeczeństwo\">Społeczeństwo</option>\r\n                            <option value=\"fakty-autentyczne\">Fakty Autentyczne</option>\r\n                            <option value=\"kinematografia\">Kinematografia</option>\r\n                        </select></Col>\r\n                   <Col xs={12}><input style={styles.form__button} type=\"submit\" value=\"Dalej!\" /></Col>\r\n                    </form>\r\n                    </Row>\r\n                </Container>\r\n            </section>\r\n        )\r\n    }\r\n    \r\n}\r\nexport default connect(\r\n    (state: ApplicationState) => state.category,\r\n    Category.actionCreators\r\n) (ChoseIt as any);","import * as React from 'react';\r\nimport { Route } from 'react-router';\r\nimport Layout from './components/Layout';\r\nimport Home from './components/Home';\r\nimport Help from './components/Help';\r\nimport Quiz from './components/Quiz';\r\nimport Summary from './components/Summary';\r\nimport Category from './components/ChoseIt';\r\nimport './custom.scss'\r\n\r\nexport default () => (\r\n    <Layout>\r\n        <Route exact path = '/' component           = {Home} />\r\n        <Route path       = '/category' component   = {Category}/>\r\n        <Route path       = '/quiz' component       = {Quiz}/>\r\n        <Route path       = '/help' component       = {Help} />\r\n        <Route path       = '/summary' component    = {Summary}/>\r\n    </Layout>\r\n);\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const url = process.env.PUBLIC_URL as string;\r\n        const publicUrl = new URL(url, window.location.toString());\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Lets check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl);\r\n            } else {\r\n                // Is not local host. Just register service worker\r\n                registerValidSW(swUrl);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing as ServiceWorker;\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the old content will have been purged and\r\n                            // the fresh content will have been added to the cache.\r\n                            // It's the perfect time to display a \"New content is\r\n                            // available; please refresh.\" message in your web app.\r\n                            console.log('New content is available; please refresh.');\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (response.status === 404 || (contentType && contentType.indexOf('javascript') === -1)) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log('No internet connection found. App is running in offline mode.');\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.css';\r\n\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { ConnectedRouter } from 'connected-react-router';\r\nimport { createBrowserHistory } from 'history';\r\nimport configureStore from './store/configureStore';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\n// Create browser history to use in the Redux store\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href') as string;\r\nconst history = createBrowserHistory({ basename: baseUrl });\r\n\r\n// Get the application-wide store instance, prepopulating with state from the server where available.\r\nconst store = configureStore(history);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <ConnectedRouter history={history}>\r\n            <App />\r\n        </ConnectedRouter>\r\n    </Provider>,\r\n    document.getElementById('root'));\r\n\r\nregisterServiceWorker();\r\n","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\r\nimport { History } from 'history';\r\nimport { ApplicationState, reducers } from './';\r\n\r\nexport default function configureStore(history: History, initialState?: ApplicationState) {\r\n    const middleware = [\r\n        thunk,\r\n        routerMiddleware(history)\r\n    ];\r\n\r\n    const rootReducer = combineReducers({\r\n        ...reducers,\r\n        router: connectRouter(history)\r\n    });\r\n\r\n    const enhancers = [];\r\n    const windowIfDefined = typeof window === 'undefined' ? null : window as any;\r\n    if (windowIfDefined && windowIfDefined.__REDUX_DEVTOOLS_EXTENSION__) {\r\n        enhancers.push(windowIfDefined.__REDUX_DEVTOOLS_EXTENSION__());\r\n    }\r\n\r\n    return createStore(\r\n        rootReducer,\r\n        initialState,\r\n        compose(applyMiddleware(...middleware), ...enhancers)\r\n    );\r\n}\r\n"],"sourceRoot":""}